<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NMediator.Http</name>
    </assembly>
    <members>
        <member name="T:NMediator.NMediator.Http.HttpTransport">
            <summary>
            Implement Http as outgoing transport.
            3 Steps : 
            - create an http request from message
            - send http request
            - convert response to TResult
            </summary>
        </member>
        <member name="M:NMediator.NMediator.Http.HttpTransport.#ctor(NMediator.NMediator.Http.IHttpMessageFactory,System.Func{System.Net.Http.HttpClient})">
            <summary>
            Create a new HttpTransport
            </summary>
            <param name="factory">the http message factory</param>
            <param name="clientFactory">the http client facotry</param>
        </member>
        <member name="M:NMediator.NMediator.Http.HttpTransport.SendMessage``2(``0,System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="T:NMediator.NMediator.Http.IHttpMessageFactory">
            <summary>
            interface for create HttpRequestMessage from object
            and create typed object from HttpResponseMessage
            </summary>
        </member>
        <member name="M:NMediator.NMediator.Http.IHttpMessageFactory.CreateRequest(System.Object)">
            <summary>
            Create a HttpRequestMessage from message object.
            All public properties are content of message
            </summary>
            <param name="message">the message</param>
        </member>
        <member name="M:NMediator.NMediator.Http.IHttpMessageFactory.CreateResult``1(System.Net.Http.HttpResponseMessage)">
            <summary>
            create a T Message from http response message
            </summary>
            <typeparam name="TMessage">Type of message</typeparam>
            <param name="httpMessage">the http response message</param>
            <returns></returns>
        </member>
        <member name="T:NMediator.NMediator.Http.SimpleHttpMessageFactory">
            <summary>
            Simple HttpMessageFactory based on factory provided by the caller
            
            </summary>
        </member>
        <member name="M:NMediator.NMediator.Http.SimpleHttpMessageFactory.AddRequestFactory``1(System.Func{``0,System.Net.Http.HttpRequestMessage})">
            <summary>
            Add a factory for create an HttpRequestMessage from TMessage object
            </summary>
            <typeparam name="TMessage">type of message</typeparam>
            <param name="factory">the factory to create HttpRequestMessage from TMessage object</param>
        </member>
        <member name="M:NMediator.NMediator.Http.SimpleHttpMessageFactory.AddErrorFactory(System.Net.HttpStatusCode,System.Func{System.Net.Http.HttpResponseMessage,NMediator.Core.Result.Error})">
            <summary>
            Add a factory to provide a request result Error from HttpResponseMessage for a http status code
            </summary>
            <param name="httpStatusCode">the status code for which apply the factory</param>
            <param name="factory">the factory de create RequestResult Error from Http response message</param>
        </member>
        <member name="M:NMediator.NMediator.Http.SimpleHttpMessageFactory.AddExceptionFactory(System.Net.HttpStatusCode,System.Func{System.Net.Http.HttpResponseMessage,System.Exception})">
            <summary>
            Add a factory to create an exception from HttpResponseMessage for a http status code
            </summary>
            <param name="httpStatusCode">the status code for which apply the factory</param>
            <param name="factory">the factory to create Exception from http response message</param>
        </member>
        <member name="M:NMediator.NMediator.Http.SimpleHttpMessageFactory.CreateRequest(System.Object)">
            <summary>
            Create a HttpRequestMessage from message
            </summary>
            <param name="message">the message from which create HttpRquestMessage</param>
        </member>
        <member name="M:NMediator.NMediator.Http.SimpleHttpMessageFactory.CreateResult``1(System.Net.Http.HttpResponseMessage)">
            <summary>
            create a message from http response message
            </summary>
            <typeparam name="TMessage">Type of message</typeparam>
            <param name="httpMessage">the http response message</param>
        </member>
    </members>
</doc>
